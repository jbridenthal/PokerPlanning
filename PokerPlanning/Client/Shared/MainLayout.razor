@inject HubService _hubService;
@inherits LayoutComponentBase

<CascadingValue Value="this">
    <MudThemeProvider Theme="MyCustomTheme" />
    <MudDialogProvider />
    <MudSnackbarProvider />
    <MudLayout>
        <MudAppBar Fixed="false" Elevation="1">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudText Typo="Typo.h5" Class="ml-3">Planning Poker</MudText>
            <MudSpacer />
             <MudChip Icon="@Icons.Material.Filled.Settings" Color="Color.Primary"  OnClick="@((e) => UserDrawerToggle())">@_hubService.CurrentUser?.Name</MudChip>
        </MudAppBar>
        <MudDrawer @bind-Open="_roomDrawerOpen" Elevation="2" ClipMode="DrawerClipMode.Always">
            <RoomsList></RoomsList>
        </MudDrawer>
        <MudDrawer @bind-Open="_userDrawerOpen" Elevation="2" Anchor="Anchor.End" DisableOverlay="true" ClipMode="DrawerClipMode.Always">
            <MudDrawerHeader>
                <MudText Typo="Typo.h5" Class="mt-1">Change User Information</MudText>
            </MudDrawerHeader>
        </MudDrawer>
        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
                @Body
            </MudContainer>
            <footer>
                <MudSpacer />  <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" /><MudLink Href="https://github.com/jbridenthal/PokerPlanning" Target="_blank" Color="Color.Dark">https://github.com/jbridenthal/PokerPlanning</MudLink>
            </footer>
        </MudMainContent>

    </MudLayout>

</CascadingValue>
@code {
    bool _roomDrawerOpen = false;
    bool _userDrawerOpen = false;


    protected override async Task OnInitializedAsync()
    {
        _hubService.OnChange += StateHasChanged;
    }

    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new Palette()
            {
                Primary = Colors.Blue.Darken3,
                Secondary = Colors.Green.Darken3,
                AppbarBackground = Colors.BlueGrey.Lighten1,
                AppbarText = Colors.Grey.Darken3,
                Tertiary = Colors.BlueGrey.Lighten1
            }
        };


    void DrawerToggle()
    {
        _roomDrawerOpen = !_roomDrawerOpen;
    }
    void UserDrawerToggle()
    {
        _userDrawerOpen = !_userDrawerOpen;
    }
    public void Dispose()
    {
        _hubService.OnChange += StateHasChanged;
    }
}
